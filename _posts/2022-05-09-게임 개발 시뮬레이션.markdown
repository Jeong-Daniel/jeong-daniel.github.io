---
title: 게임 개발 시뮬레이션
date:   2022-05-10 17:58:41 +0900
categories: [Coding_Test, Others]
tags: [coding, python, algorithm, simulation]
---

조건

게임 캐릭터가 맵안에서 움직이는 시스템을 개발하고자 한다. 캐릭터가 있는 장소는 1x1 크기의 정사각형으로 이루어진 NxM크기의 직사각형으로, 각각의 칸은 육지 또는 바다이다. 캐릭터는 동서남북 중 한 곳을 바라본다.

 

1. 현재 위치에서 현재 방향을 기준으로 왼쪽 방향(반시계 방향으로 90도 회전한 방향)부터 차례대로 갈 곳을 정한다.

2. 캐릭터의 바로 왼쪽 방향에 아직 가보지 않은 칸이 존재한다면, 왼쪽 방향으로 회전한 다음 왼쪽으로 한 칸을 전진한다. 왼쪽 방향에 가보지 않은 칸이 없다면, 왼쪽방향으로 회전만 하고 1단계로 돌아간다.

3. 네 방향 모두 이미 가보았거나 바다로 되어 있다면 바라보는 방향을 유지한채로 한칸 뒤로 가고 1단계로 돌아간다. 뒤쪽 방향이 바다인 칸이라 뒤로 갈 수 없다면 움직임을 멈춘다.

```python
#N,M을 공백으로 구분하여 입력받기
n,m = map(int, input().split())

#방문한 위치를 저장하기 위한 맵을 생성하여 0으로 초기화
d = [[0] * m for _ in range(n)]
#현재 캐릭터의 X좌표, Y좌표, 방향을 입력받기
x,y, direction = map(int, input().split())
d[x][y] = 1 #현재 좌표 방문 처리

#전체 맵 정보를 입력받기
array = []
for i in range(n):
    array.append(list(map(int, input().split())))
    
#북, 동, 남, 서 방향 정의
dx = [-1, 0, 1, 0]
dy = [0, 1, 0, -1]

#왼쪽으로 회전
def turn_left():
    global direction
    direction -= 1
    if direction == -1:
        direction = 3

#시뮬레이션 시작
count = 1
turn_time = 0
while True:
    #왼쪽으로 회전
    turn_left()
    nx = x + dx[direction]
    ny = y + dy[direction]
    #회전한 이후 정면에 가보지 않은 칸이 존재하지 않는 경우 이동
    if d[nx][ny] == 0 and array[nx][ny] == 0:
        d[nx][ny] = 1
        n = nx
        y = ny
        count += 1
        turn_time = 0
        continue
    #회전한 이후 정면에 가보지 않은 칸이 없거나 바다인 경우
    else:
        turn_time += 1
    #네 방향 모두 갈 수 없는 경우
    if turn_time == 4:
        nx = x - dx[direction]
        ny = y = dy[direction]
        #뒤로 갈 수 있다면 이동하기
        if array[nx][ny] == 0:
            x = nx
            y = ny
        #뒤가 바다로 막혀 있는 경우
        else:
            break
        turn_time = 0
    
#정답출력
print(count)
```

