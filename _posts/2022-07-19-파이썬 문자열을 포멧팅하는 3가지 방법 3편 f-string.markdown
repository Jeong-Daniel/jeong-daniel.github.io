---
title: 파이썬 문자열을 포멧팅하는 3가지 방법 3편 f-string
date:   2022-07-19 13:32:41 +0900
categories: [Languages, Python]
tags: [python, coding, string, format]
---

앞에서 format와 %에 이어서 마지막 f-sring입니다. 파이썬 3.6 버전 부터 지원을 하기에 비교적 최신 기술에 속합니다. (현재 3.10이 릴리즈되었습니다)

앞의 포메팅 하는 문서를 보고 오시면 더욱 이해가 잘 될겁니다.

[파이썬 문자열을 포멧팅하는 3가지 방법 1편 format](https://jeong-daniel.github.io/posts/%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84-%ED%8F%AC%EB%A9%A7%ED%8C%85%ED%95%98%EB%8A%94-3%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95-1%ED%8E%B8-format/)  
[파이썬 문자열을 포멧팅하는 3가지 방법 2편 % 서식기호](https://jeong-daniel.github.io/posts/%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84-%ED%8F%AC%EB%A9%A7%ED%8C%85%ED%95%98%EB%8A%94-3%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95-3%ED%8E%B8-f-string/)
  
  

[3. f-string 공식문서 참고 링크](https://docs.python.org/3/tutorial/inputoutput.html)

f-string 포매팅은 중괄호와 f만 기억하시면 됩니다.
```py
c = '블루'
n = 7
result = f'저는 {c}를 선호하고 좋아하는 숫자는 {n} 입니다'
print(result)
```

![formating result](https://user-images.githubusercontent.com/85277660/210797223-01b5a5cc-c59f-4139-8d15-42f7e3c53965.png)

f-string는 앞에 f를 붙이고 변수를 넣을 공간에다가는 중괄호로 표시를 해주면 됩니다. 이게 끝입니다. 

```py
left = '왼쪽'
result1 = f'|{left:<10}|'
print(result1)

right = '오른쪽'
result2 = f'|{right:>10}|'
print(result2)

center = '중앙'
result3 = f'|{center:^10}|'
print(result3)
```

![img1 right](https://user-images.githubusercontent.com/85277660/210797298-c97426af-bc4e-48e3-949c-1938bc0c6850.png)

더불어서 앞에서 포매팅할때 사용한 왼쪽, 오른쪽, 중앙 정렬과

```py
left = '왼쪽'
result1 = f'|{left:0<10}|'
print(result1)

right = '오른쪽'
result2 = f'|{right:0>10}|'
print(result2)

center = '중앙'
result3 = f'|{center:0^10}|'
print(result3)
```
빈칸채워넣기

```py
left = 1.1
result1 = f'|{left:.2f}|'
print(result1)

right = 22.22
result2 = f'|{right:.2f}|'
print(result2)

center = 333.333
result3 = f'|{center:.2f}|'
print(result3)
```
실수 출력 자리수 지정 모두 가능합니다.


딕셔너리 사전형 자료형의 경우 아래처럼 해도 작동을 합니다. 

```py
word = {'a': 'ㄱ', 'b': 'ㄴ', 'c': 'ㄷ'}
result = f'my word {word["a"]}, {word["b"]}, {word["c"]}'
print(result)
```

![img1 daumcdn](https://user-images.githubusercontent.com/85277660/210797400-50cde2c0-40ab-4fd0-9e80-8e4bd128ae05.png)

리스트 형태도 예외는 아닙니다.

```py
my_list=[100,200,300]
result2=f'my list {my_list[0]},{my_list[1]},{my_list[2]}'
print(result2)
```

![img1 list index](https://user-images.githubusercontent.com/85277660/210797453-e576b816-e0ef-434f-a8e9-cc7179c1398d.png)

모두 알아둘거는 없습니다. 어디까지나 본인에게 편한 방법을 사용하시면 됩니다.