---
title: 주사위 굴리기 백준 14499번 시뮬레이션
date:   2022-08-28 17:44:30 +0900
categories: [Coding_Test, 백준]
tags: [coding, python, algorithm, simulation]
---

[https://www.acmicpc.net/problem/14499](https://www.acmicpc.net/problem/14499)

> 문제
> 크기가 N×M인 지도가 존재한다. 지도의 오른쪽은 동쪽, 위쪽은 북쪽이다. 이 지도의 위에 주사위가 하나 놓여져 있으며, 주사위의 전개도는 아래와 같다. 지도의 좌표는 (r, c)로 나타내며, r는 북쪽으로부터 떨어진 칸의 개수, c는 서쪽으로부터 떨어진 칸의 개수이다. 
> 
```
  2
4 1 3
  5
  6
```
> 주사위는 지도 위에 윗 면이 1이고, 동쪽을 바라보는 방향이 3인 상태로 놓여져 있으며, 놓여져 있는 곳의 좌표는 (x, y) 이다. 가장 처음에 주사위에는 모든 면에 0이 적혀져 있다.
> 
> 지도의 각 칸에는 정수가 하나씩 쓰여져 있다. 주사위를 굴렸을 때, 이동한 칸에 쓰여 있는 수가 0이면, 주사위의 바닥면에 쓰여 있는 수가 칸에 복사된다. 0이 아닌 경우에는 칸에 쓰여 있는 수가 주사위의 바닥면으로 복사되며, 칸에 쓰여 있는 수는 0이 된다.
> 
> 주사위를 놓은 곳의 좌표와 이동시키는 명령이 주어졌을 때, 주사위가 이동했을 때 마다 상단에 쓰여 있는 값을 구하는 프로그램을 작성하시오.
> 
> 주사위는 지도의 바깥으로 이동시킬 수 없다. 만약 바깥으로 이동시키려고 하는 경우에는 해당 명령을 무시해야 하며, 출력도 하면 안 된다.

---

시간을 두고 고민해봤지만 정확히 문제를 이해하지 못했다.

1. 주사위의 모든 칸은 0으로 이루어져있다.

2. 입력받는 숫자는 지도의 크기, 주사위 시작 위치, 명령어 개수

3. 해당 칸에 0이라면 주사위의 바닥을 복사한다.

4. 0이 아니라면 그 숫자를 주사위 바닥에 복사하고 지도에는 0을 넣는다.

5. 주사위 상단에 쓰인 값을 출력하며 이동하지 못하는 경우 출력도 하지 않는다 인데

쓰고보니 이해했다. 첫줄 다음의 N개의 숫자는 말그대로 지도 전체의 숫자였구나...


![drawing](https://user-images.githubusercontent.com/85277660/211150194-35f44d39-b859-4498-b3ef-b0fbce3c946e.jpg)

그림으로 예시를 들어 보겠습니다. 편의상 숫자는 위 처럼 1~6부터 이루어 져있는데 이를 두개씩 쌍으로 묶어 보겠습니다.

(위,아래) (동,서) (북,남) 이렇게 됬을때 동으로 이동하면 북과 남 방향은 그대로지만 위아래 동서는

(서,동) (위, 아래) 이렇게 쌍으로 두개가 교환이 됩니다. 그러면 해당 방향으로 이동이 가능한가 체크를 하고 기능이 하다면 이동을 하고 위의 값을 출력을 하면 됩니다.

```py
dice1 = [0, 0] # 위, 아래
dice2 = [0, 0] # 좌, 우
dice3 = [0, 0] # 앞, 뒤
directions = [(0,1), (0,-1), (-1,0), (1, 0)]
```

위, 아래, 좌, 우, 앞 뒤를 담을 숫자 리스트를 만들어 줍시다. 방향은 동쪽은 1, 서쪽은 2, 북쪽은 3, 남쪽은 4으로 맞춰 줍시다.

```py
N, M, sx, sy, K = map(int, input().split())
MAP = []
for _ in range(N):
    MAP.append(list(map(int, input().split())))
command = list(map(int,input().split()))
```
입력 받을 부분은 넘어가겠습니다.

```py
def move(d):
    global dice1, dice2, dice3
    # 동쪽이동 
    # 좌->위 위->우, 우,아래     아래가 좌
    if d == 1:
        dice2, dice1 = dice1, dice2[::-1]

    # 서쪽이동
    # 위->좌,   아래->우,    좌-> 아래,    우-> 위
    elif d == 2:
        dice1, dice2 = dice2, dice1[::-1]

    # 북쪽이동
    # 위 뒤, 아래 앞         앞 위   뒤 아래
    elif d == 3:
        dice3, dice1 = dice1, dice3[::-1]

    # 남쪽이동
    # 위 아래 -> 앞 뒤     앞 뒤 - > 아래 뒤
    else:
        dice1, dice3 = dice3, dice1[::-1]
```

그리고 주사위가 이동할때마다 변하는 것을 반영합니다.

```py
    for c in command:
        nx, ny = sx + directions[c-1][0], sy + directions[c-1][1]
        if nx >= N or ny >= M or nx < 0  or ny < 0:
            continue
        move(c)
        # 주사위값 복사 
        if MAP[nx][ny] == 0:
            MAP[nx][ny] = dice1[1]
        else:
            dice1[1] = MAP[nx][ny]
            MAP[nx][ny] = 0

        sx, sy = nx, ny        
        print(dice1[0])
```
그리고 주사위의 이동명령 만큼 for문을 돌려 줍시다. 인덱스 때문에 c에서 1을 뺀 값을 넣어 줍시다. 그렇게 이동한 값을 확인하니 지도 밖이라면 넘어갑시다.

지도 안이라서 이동이 가능하다면 앞에서 정의한 move로 주사위를 이동시켜줍니다.

만약 해당 지도에 숫자가 있는지 없는지 조건에 따라서 주사위에 복사하기도 지도에 복사하기도 합니다.

그리고 주사위의 위치를 갱신하고 주사위의 가장 위쪽을 출력합시다.